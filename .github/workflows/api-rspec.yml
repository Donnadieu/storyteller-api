# Some notes on getting started https://dev.to/sulmanweb/github-actions-run-rspec-test-on-every-push-for-free-1pb6#settings-through-the-yaml-file
name: API specs

on: [pull_request]

jobs:
  build:
    name: CI test suite
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      PROJECT_ROOT: .
      # TODO: Enabling the line below will output test logs to the cloud.
      #   We need to test that doing this within a PR will stream that PR's
      #   log output in the test environment to the cloud logger
      STACKDRIVER_ENABLED: false

    services:
      postgres:
        image: postgres:15.4
        env:
          POSTGRES_DB: storysprout_test
          POSTGRES_HOST_AUTH_METHOD: trust # IMPORTANT allows all connections without a password - experimental only!
        ports: ['5432:5432']
        options: >- # Options for the service, in this case we want to make sure that the Postgres container passes a health check
          --health-cmd pg_isready
          --health-interval 15s
          --health-timeout 5s
          --health-retries 3      

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby 3.2.2
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2

    - name: Run bundle install
      working-directory: ${{env.PROJECT_ROOT}}
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3        

    - name: Setup DB
      run: bin/rake db:drop db:create db:migrate && bin/rake db:seed

    - name: Build and run tests
      run: |
        bundle exec rake db:create db:migrate
        # Run all specs except those with the option devtool: true
        bundle exec rspec --tag "~devtool"
